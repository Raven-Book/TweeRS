name: Build
on:
  workflow_dispatch: {}
  workflow_run:
    workflows: ["Test"]
    types:
      - completed
    branches: [master]
jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-musl
            archive-name: tweers-linux.tar.gz
          - build: macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
            archive-name: tweers-macos.tar.gz
          - build: windows
            os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
            archive-name: tweers-windows.7z
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --verbose --release --target ${{ matrix.target }}
        env:
          RUST_BACKTRACE: 1

      - name: Strip binary (linux and macos)
        if: matrix.build == 'linux' || matrix.build == 'macos'
        run: strip "target/${{ matrix.target }}/release/tweers"

      - name: Build archive
        shell: bash
        run: |
          mkdir archive
          if [ -f "LICENSE" ]; then cp LICENSE archive/; fi
          if [ -f "README.md" ]; then cp README.md archive/; fi
          cd archive
          if [ "${{ matrix.build }}" = "windows" ]; then
            cp "../target/${{ matrix.target }}/release/tweers.exe" ./
            7z a "${{ matrix.archive-name }}" LICENSE README.md tweers.exe
          else
            cp "../target/${{ matrix.target }}/release/tweers" ./
            tar -czf "${{ matrix.archive-name }}" LICENSE README.md tweers
          fi

      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive-name }}
          path: archive/${{ matrix.archive-name }}
